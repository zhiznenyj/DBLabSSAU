-- MySQL Script generated by MySQL Workbench
-- Fri Dec 22 20:06:13 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema estates
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema estates
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `estates` DEFAULT CHARACTER SET utf8 ;
USE `estates` ;

-- -----------------------------------------------------
-- Table `estates`.`Holder`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estates`.`Holder` (
  `ID` INT NOT NULL,
  `firstname` VARCHAR(128) NOT NULL,
  `surname` VARCHAR(128) NOT NULL,
  `email` VARCHAR(200) NULL,
  `telegram` VARCHAR(200) NULL,
  `vk` VARCHAR(200) NULL,
  `change_date` TIMESTAMP NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `estates`.`Realtor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estates`.`Realtor` (
  `ID` INT NOT NULL,
  `firstname` VARCHAR(128) NOT NULL,
  `surname` VARCHAR(128) NOT NULL,
  `email` VARCHAR(200) NULL,
  `telegram` VARCHAR(200) NULL,
  `vk` VARCHAR(200) NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `estates`.`Apartment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estates`.`Apartment` (
  `ID` INT NOT NULL,
  `holderID` INT NULL,
  `total_size` DECIMAL(10,2) UNSIGNED NULL,
  `live_size` DECIMAL(10,2) UNSIGNED NOT NULL,
  `kitchen_size` DECIMAL(10,2) UNSIGNED NULL,
  `rooms` TINYINT UNSIGNED NOT NULL,
  `address` VARCHAR(200) NOT NULL,
  `total_floors` TINYINT UNSIGNED NULL,
  `floor` TINYINT UNSIGNED NULL,
  `cost` DECIMAL(10,2) UNSIGNED NULL DEFAULT 0,
  `register_date` TIMESTAMP NULL,
  `change_date` TIMESTAMP NULL,
  PRIMARY KEY (`ID`),
  INDEX `holderID_idx` (`holderID` ASC) VISIBLE,
  CONSTRAINT `holderID`
    FOREIGN KEY (`holderID`)
    REFERENCES `estates`.`Holder` (`ID`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `estates`.`Apartment_Realtors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estates`.`Apartment_Realtors` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `realtorID` INT NOT NULL,
  `apartmentID` INT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `realtorID_idx` (`realtorID` ASC) VISIBLE,
  INDEX `apartmentID_idx` (`apartmentID` ASC) VISIBLE,
  CONSTRAINT `realtorID`
    FOREIGN KEY (`realtorID`)
    REFERENCES `estates`.`Realtor` (`ID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `apartmentID`
    FOREIGN KEY (`apartmentID`)
    REFERENCES `estates`.`Apartment` (`ID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `estates` ;

-- -----------------------------------------------------
-- Placeholder table for view `estates`.`selling_flats`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estates`.`selling_flats` (`ID` INT, `surname` INT, `firstname` INT, `flats` INT);

-- -----------------------------------------------------
-- Placeholder table for view `estates`.`flats_2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estates`.`flats_2` (`holderID` INT, `live_size` INT, `address` INT, `cost` INT);

-- -----------------------------------------------------
-- Placeholder table for view `estates`.`avg_flat_cost`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estates`.`avg_flat_cost` (`rooms` INT, `avg_cost` INT);

-- -----------------------------------------------------
-- View `estates`.`selling_flats`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `estates`.`selling_flats`;
USE `estates`;
CREATE  OR REPLACE VIEW selling_flats AS
    SELECT Holder.ID, surname, firstname, Count(*) as flats
    FROM Holder
    LEFT JOIN Apartment as apart ON apart.holderID = Holder.ID
    GROUP BY Holder.ID;

-- -----------------------------------------------------
-- View `estates`.`flats_2`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `estates`.`flats_2`;
USE `estates`;
CREATE  OR REPLACE VIEW flats_2 AS
    SELECT holderID, live_size, address, cost
    FROM Apartment
    WHERE rooms = 2;

-- -----------------------------------------------------
-- View `estates`.`avg_flat_cost`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `estates`.`avg_flat_cost`;
USE `estates`;
CREATE  OR REPLACE VIEW avg_flat_cost AS
    SELECT rooms, ROUND(AVG(cost), 2) as avg_cost
    FROM Apartment
    GROUP BY rooms;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;